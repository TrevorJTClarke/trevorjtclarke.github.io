// Flexbox Mixins
// --------------------------------------------------
// CSS3 Flexible Box Model and property defaults

// Custom shorthand notation for flexbox
@mixin box($orient: inline-axis, $pack: start, $align: stretch) {
  @include display-box;
  @include box-orient($orient);
  @include box-pack($pack);
  @include box-align($align);
}

@mixin display-box {
  display: flex;
}

@mixin align-items($align: stretch) {
  // start|end|center|baseline|stretch
  align-items: $align;
}

@mixin align-self($align: stretch) {
  // start|end|center|baseline|stretch
  align-self: $align;
}

// CSS3 Flexible Box Model and property defaults
@mixin display($value) {
  display: $value;
}

// 2009 - box-flex (integer)
@mixin flex($value) {
  flex: $value;
}

// flex-direction (row | row-reverse | column | column-reverse)
@mixin flex-direction($value: row) {
  flex-direction: $value;
}

// flex-wrap (nowrap | wrap | wrap-reverse)
@mixin flex-wrap($value: nowrap) {
  flex-wrap: $value;
}

// flex-flow (flex-direction || flex-wrap)
@mixin flex-flow($value) {
  flex-flow: $value;
}

// order (integer)
@mixin order($int: 0) {
  order: $int;
}

// 2012 - flex-grow (number)
@mixin flex-grow($number: 0) {
  flex-grow: $number;
}

// 2012 - flex-shrink (number)
@mixin flex-shrink($number: 1) {
  flex-shrink: $number;
}

// 2012 - flex-basis (number)
@mixin flex-basis($width: auto) {
  flex-basis: $width;
}

// justify-content (flex-start | flex-end | center | space-between | space-around)
@mixin justify-content($value: flex-start) {
  justify-content: $value;
}

// align-items (flex-start | flex-end | center | baseline | stretch)
@mixin align-items($value: stretch) {
  align-items: $value;
}

// align-self (auto | flex-start | flex-end | center | baseline | stretch)
@mixin align-self($value: auto) {
  align-self: $value;
}

// align-content (flex-start | flex-end | center | space-between | space-around | stretch)
@mixin align-content($value: stretch) {
  align-content: $value;
}



// Button Mixins
// --------------------------------------------------

@mixin button-style($bg-color, $border-color, $active-bg-color, $active-border-color, $color) {
  background-color: $bg-color;
  border-color: $border-color;
  color: $color;

  // Give desktop users something to play with
  &:hover {
    color: $color;
    text-decoration: none;
  }

  &.active,
  &.activated {
    background-color: $active-bg-color;
    border-color: $active-border-color;
    box-shadow: inset 0 1px 3px transparentize($black, .85);
  }
}

@mixin button-clear($color, $font-size: '') {
  &.button-clear {
    background: none;
    border-color: transparent;
    box-shadow: none;
    color: $color;

    @if $font-size != '' {
      font-size: $font-size;
    }
  }

  &.button-icon {
    background: none;
    border-color: transparent;
  }
}

@mixin horizontal-gradient($from, $to, $stop: 100%) {
  background: linear-gradient(to right, $from 0%, $to $stop);
}

@mixin vertical-gradient($start: #000, $stop: #fff) {
  background: linear-gradient(to bottom, $start 0%, $stop 100%);
}

@mixin angle-gradient($start: #000, $stop: #fff, $angle: to bottom right) {
  background: linear-gradient($angle, $start, $stop);
}

@mixin radial-gradient($stop: #000, $start: #fff) {
  background: radial-gradient(ellipse at center, $start 0%, $stop 100%);
}


// Clearfix
// --------------------------------------------------

@mixin clearfix {
  zoom: 1;

  &::before,
  &::after {
    content: '';
    display: table;
    line-height: 0;
  }

  &::after {
    clear: both;
  }
}


// Placeholder text
// --------------------------------------------------

@mixin placeholder($color: $input-color-placeholder, $text-indent: 0) {
  &::placeholder {
    color: $color;
  }

  &::input-placeholder {
    color: $color;
    text-indent: $text-indent;
  }
}


// Font Mixins
// --------------------------------------------------

@mixin font-family-serif {
  font-family: $serif-font-family;
}

@mixin font-family-sans-serif {
  font-family: $sans-font-family;
}

@mixin font-family-monospace {
  font-family: $mono-font-family;
}

@mixin font-shorthand($size: $base-font-size, $weight: normal, $line-height: $base-line-height) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

@mixin font-serif($size: $base-font-size, $weight: normal, $line-height: $base-line-height) {
  @include font-family-serif;
  @include font-shorthand($size, $weight, $line-height);
}

@mixin font-sans-serif($size: $base-font-size, $weight: normal, $line-height: $base-line-height) {
  @include font-family-sans-serif;
  @include font-shorthand($size, $weight, $line-height);
}

@mixin font($size: $base-font-size, $weight: normal, $line-height: $base-line-height) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

// Box shadows
// --------------------------------------------------
@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}

// Transition Mixins
// --------------------------------------------------
@mixin transition($transition...) {
  transition: $transition;
}

@mixin transition-delay($transition-delay) {
  transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
  transition-duration: $transition-duration;
}

@mixin transition-timing-function($transition-timing) {
  transition-timing-function: $transition-timing;
}

@mixin transition-property($property) {
  transition-property: $property;
}

@mixin transition-transform($properties...) {
  transition: transform $properties;
}


// Animation Mixins
// --------------------------------------------------

@mixin animation($animation) {
  animation: $animation;
}

@mixin animation-duration($duration) {
  animation-duration: $duration;
}

@mixin animation-direction($direction) {
  animation-direction: $direction;
}

@mixin animation-timing-function($animation-timing) {
  animation-timing-function: $animation-timing;
}

@mixin animation-fill-mode($fill-mode) {
  animation-fill-mode: $fill-mode;
}

@mixin animation-name($name) {
  animation-name: $name;
}

@mixin animation-iteration-count($count) {
  animation-iteration-count: $count;
}


// Transformation Mixins
// --------------------------------------------------

@mixin rotate($degrees) {
  @include transform(rotate($degrees));
}

@mixin scale($ratio) {
  @include transform(scale($ratio));
}

@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

@mixin skew($x, $y) {
  @include transform(skew($x, $y));
  backface-visibility: hidden;
}

@mixin translate3d($x: 0, $y: 0, $z: 0) {
  @include transform(translate3d($x, $y, $z));
}

@mixin translate-z($z) {
  @include transform(translateZ($z));
}

@mixin transform($val) {
  transform: $val;
}
